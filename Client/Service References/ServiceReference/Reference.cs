//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client.ServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.ILogService")]
    public interface ILogService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogService/AddRecord", ReplyAction="http://tempuri.org/ILogService/AddRecordResponse")]
        void AddRecord(TestQuestService.ClientMessage msg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogService/AddRecord", ReplyAction="http://tempuri.org/ILogService/AddRecordResponse")]
        System.Threading.Tasks.Task AddRecordAsync(TestQuestService.ClientMessage msg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogService/GetMessages", ReplyAction="http://tempuri.org/ILogService/GetMessagesResponse")]
        TestQuestService.ClientMessage[] GetMessages(TestQuestService.MessageLevel level, System.DateTime startDate, System.DateTime endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogService/GetMessages", ReplyAction="http://tempuri.org/ILogService/GetMessagesResponse")]
        System.Threading.Tasks.Task<TestQuestService.ClientMessage[]> GetMessagesAsync(TestQuestService.MessageLevel level, System.DateTime startDate, System.DateTime endDate);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILogServiceChannel : Client.ServiceReference.ILogService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LogServiceClient : System.ServiceModel.ClientBase<Client.ServiceReference.ILogService>, Client.ServiceReference.ILogService {
        
        public LogServiceClient() {
        }
        
        public LogServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LogServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LogServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LogServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void AddRecord(TestQuestService.ClientMessage msg) {
            base.Channel.AddRecord(msg);
        }
        
        public System.Threading.Tasks.Task AddRecordAsync(TestQuestService.ClientMessage msg) {
            return base.Channel.AddRecordAsync(msg);
        }
        
        public TestQuestService.ClientMessage[] GetMessages(TestQuestService.MessageLevel level, System.DateTime startDate, System.DateTime endDate) {
            return base.Channel.GetMessages(level, startDate, endDate);
        }
        
        public System.Threading.Tasks.Task<TestQuestService.ClientMessage[]> GetMessagesAsync(TestQuestService.MessageLevel level, System.DateTime startDate, System.DateTime endDate) {
            return base.Channel.GetMessagesAsync(level, startDate, endDate);
        }
    }
}
